//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class XMLConstHandle : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XMLConstHandle(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XMLConstHandle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XMLConstHandle obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XMLConstHandle() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cstinyxml2PINVOKE.delete_XMLConstHandle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public XMLConstHandle(XMLNode node) : this(cstinyxml2PINVOKE.new_XMLConstHandle__SWIG_0(XMLNode.getCPtr(node)), true) {
  }

  public XMLConstHandle(XMLConstHandle ref_) : this(cstinyxml2PINVOKE.new_XMLConstHandle__SWIG_2(XMLConstHandle.getCPtr(ref_)), true) {
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public XMLConstHandle FirstChild() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_FirstChild(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle FirstChildElement(string name) {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_FirstChildElement__SWIG_0(swigCPtr, name), true);
    return ret;
  }

  public XMLConstHandle FirstChildElement() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_FirstChildElement__SWIG_1(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle LastChild() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_LastChild(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle LastChildElement(string name) {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_LastChildElement__SWIG_0(swigCPtr, name), true);
    return ret;
  }

  public XMLConstHandle LastChildElement() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_LastChildElement__SWIG_1(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle PreviousSibling() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_PreviousSibling(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle PreviousSiblingElement(string name) {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_PreviousSiblingElement__SWIG_0(swigCPtr, name), true);
    return ret;
  }

  public XMLConstHandle PreviousSiblingElement() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_PreviousSiblingElement__SWIG_1(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle NextSibling() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_NextSibling(swigCPtr), true);
    return ret;
  }

  public XMLConstHandle NextSiblingElement(string name) {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_NextSiblingElement__SWIG_0(swigCPtr, name), true);
    return ret;
  }

  public XMLConstHandle NextSiblingElement() {
    XMLConstHandle ret = new XMLConstHandle(cstinyxml2PINVOKE.XMLConstHandle_NextSiblingElement__SWIG_1(swigCPtr), true);
    return ret;
  }

  public XMLNode ToNode() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLConstHandle_ToNode(swigCPtr);
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLElement ToElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLConstHandle_ToElement(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLText ToText() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLConstHandle_ToText(swigCPtr);
    XMLText ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLText(cPtr, false);
    return ret;
  }

  public XMLUnknown ToUnknown() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLConstHandle_ToUnknown(swigCPtr);
    XMLUnknown ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLUnknown(cPtr, false);
    return ret;
  }

  public XMLDeclaration ToDeclaration() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLConstHandle_ToDeclaration(swigCPtr);
    XMLDeclaration ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLDeclaration(cPtr, false);
    return ret;
  }

}
