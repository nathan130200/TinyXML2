//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class XMLAttribute : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XMLAttribute(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XMLAttribute obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XMLAttribute obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XMLAttribute() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string Name() {
    string ret = cstinyxml2PINVOKE.XMLAttribute_Name(swigCPtr);
    return ret;
  }

  public string Value() {
    string ret = cstinyxml2PINVOKE.XMLAttribute_Value(swigCPtr);
    return ret;
  }

  public int GetLineNum() {
    int ret = cstinyxml2PINVOKE.XMLAttribute_GetLineNum(swigCPtr);
    return ret;
  }

  public XMLAttribute Next() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLAttribute_Next(swigCPtr);
    XMLAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLAttribute(cPtr, false);
    return ret;
  }

  public int IntValue() {
    int ret = cstinyxml2PINVOKE.XMLAttribute_IntValue(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_int64_t Int64Value() {
    SWIGTYPE_p_int64_t ret = new SWIGTYPE_p_int64_t(cstinyxml2PINVOKE.XMLAttribute_Int64Value(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_uint64_t Unsigned64Value() {
    SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(cstinyxml2PINVOKE.XMLAttribute_Unsigned64Value(swigCPtr), true);
    return ret;
  }

  public uint UnsignedValue() {
    uint ret = cstinyxml2PINVOKE.XMLAttribute_UnsignedValue(swigCPtr);
    return ret;
  }

  public bool BoolValue() {
    bool ret = cstinyxml2PINVOKE.XMLAttribute_BoolValue(swigCPtr);
    return ret;
  }

  public double DoubleValue() {
    double ret = cstinyxml2PINVOKE.XMLAttribute_DoubleValue(swigCPtr);
    return ret;
  }

  public float FloatValue() {
    float ret = cstinyxml2PINVOKE.XMLAttribute_FloatValue(swigCPtr);
    return ret;
  }

  public XMLError QueryIntValue(SWIGTYPE_p_int value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryIntValue(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    return ret;
  }

  public XMLError QueryUnsignedValue(SWIGTYPE_p_unsigned_int value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryUnsignedValue(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(value));
    return ret;
  }

  public XMLError QueryInt64Value(SWIGTYPE_p_int64_t value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryInt64Value(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(value));
    return ret;
  }

  public XMLError QueryUnsigned64Value(SWIGTYPE_p_uint64_t value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryUnsigned64Value(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
    return ret;
  }

  public XMLError QueryBoolValue(SWIGTYPE_p_bool value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryBoolValue(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    return ret;
  }

  public XMLError QueryDoubleValue(SWIGTYPE_p_double value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryDoubleValue(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    return ret;
  }

  public XMLError QueryFloatValue(SWIGTYPE_p_float value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLAttribute_QueryFloatValue(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    return ret;
  }

  public void SetAttribute(string value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_0(swigCPtr, value);
  }

  public void SetAttribute(int value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_1(swigCPtr, value);
  }

  public void SetAttribute(uint value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_2(swigCPtr, value);
  }

  public void SetAttribute(SWIGTYPE_p_int64_t value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_3(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetAttribute(SWIGTYPE_p_uint64_t value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_4(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetAttribute(bool value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_5(swigCPtr, value);
  }

  public void SetAttribute(double value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_6(swigCPtr, value);
  }

  public void SetAttribute(float value) {
    cstinyxml2PINVOKE.XMLAttribute_SetAttribute__SWIG_7(swigCPtr, value);
  }

}
