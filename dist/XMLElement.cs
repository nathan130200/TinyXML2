//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class XMLElement : XMLNode {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal XMLElement(global::System.IntPtr cPtr, bool cMemoryOwn) : base(cstinyxml2PINVOKE.XMLElement_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XMLElement obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XMLElement obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public string Name() {
    string ret = cstinyxml2PINVOKE.XMLElement_Name(swigCPtr);
    return ret;
  }

  public void SetName(string str, bool staticMem) {
    cstinyxml2PINVOKE.XMLElement_SetName__SWIG_0(swigCPtr, str, staticMem);
  }

  public void SetName(string str) {
    cstinyxml2PINVOKE.XMLElement_SetName__SWIG_1(swigCPtr, str);
  }

  public override XMLElement ToElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_ToElement__SWIG_0(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public override bool Accept(XMLVisitor visitor) {
    bool ret = cstinyxml2PINVOKE.XMLElement_Accept(swigCPtr, XMLVisitor.getCPtr(visitor));
    return ret;
  }

  public string Attribute(string name, string value) {
    string ret = cstinyxml2PINVOKE.XMLElement_Attribute__SWIG_0(swigCPtr, name, value);
    return ret;
  }

  public string Attribute(string name) {
    string ret = cstinyxml2PINVOKE.XMLElement_Attribute__SWIG_1(swigCPtr, name);
    return ret;
  }

  public int IntAttribute(string name, int defaultValue) {
    int ret = cstinyxml2PINVOKE.XMLElement_IntAttribute__SWIG_0(swigCPtr, name, defaultValue);
    return ret;
  }

  public int IntAttribute(string name) {
    int ret = cstinyxml2PINVOKE.XMLElement_IntAttribute__SWIG_1(swigCPtr, name);
    return ret;
  }

  public uint UnsignedAttribute(string name, uint defaultValue) {
    uint ret = cstinyxml2PINVOKE.XMLElement_UnsignedAttribute__SWIG_0(swigCPtr, name, defaultValue);
    return ret;
  }

  public uint UnsignedAttribute(string name) {
    uint ret = cstinyxml2PINVOKE.XMLElement_UnsignedAttribute__SWIG_1(swigCPtr, name);
    return ret;
  }

  public SWIGTYPE_p_int64_t Int64Attribute(string name, SWIGTYPE_p_int64_t defaultValue) {
    SWIGTYPE_p_int64_t ret = new SWIGTYPE_p_int64_t(cstinyxml2PINVOKE.XMLElement_Int64Attribute__SWIG_0(swigCPtr, name, SWIGTYPE_p_int64_t.getCPtr(defaultValue)), true);
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_int64_t Int64Attribute(string name) {
    SWIGTYPE_p_int64_t ret = new SWIGTYPE_p_int64_t(cstinyxml2PINVOKE.XMLElement_Int64Attribute__SWIG_1(swigCPtr, name), true);
    return ret;
  }

  public SWIGTYPE_p_uint64_t Unsigned64Attribute(string name, SWIGTYPE_p_uint64_t defaultValue) {
    SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(cstinyxml2PINVOKE.XMLElement_Unsigned64Attribute__SWIG_0(swigCPtr, name, SWIGTYPE_p_uint64_t.getCPtr(defaultValue)), true);
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_uint64_t Unsigned64Attribute(string name) {
    SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(cstinyxml2PINVOKE.XMLElement_Unsigned64Attribute__SWIG_1(swigCPtr, name), true);
    return ret;
  }

  public bool BoolAttribute(string name, bool defaultValue) {
    bool ret = cstinyxml2PINVOKE.XMLElement_BoolAttribute__SWIG_0(swigCPtr, name, defaultValue);
    return ret;
  }

  public bool BoolAttribute(string name) {
    bool ret = cstinyxml2PINVOKE.XMLElement_BoolAttribute__SWIG_1(swigCPtr, name);
    return ret;
  }

  public double DoubleAttribute(string name, double defaultValue) {
    double ret = cstinyxml2PINVOKE.XMLElement_DoubleAttribute__SWIG_0(swigCPtr, name, defaultValue);
    return ret;
  }

  public double DoubleAttribute(string name) {
    double ret = cstinyxml2PINVOKE.XMLElement_DoubleAttribute__SWIG_1(swigCPtr, name);
    return ret;
  }

  public float FloatAttribute(string name, float defaultValue) {
    float ret = cstinyxml2PINVOKE.XMLElement_FloatAttribute__SWIG_0(swigCPtr, name, defaultValue);
    return ret;
  }

  public float FloatAttribute(string name) {
    float ret = cstinyxml2PINVOKE.XMLElement_FloatAttribute__SWIG_1(swigCPtr, name);
    return ret;
  }

  public XMLError QueryIntAttribute(string name, SWIGTYPE_p_int value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryIntAttribute(swigCPtr, name, SWIGTYPE_p_int.getCPtr(value));
    return ret;
  }

  public XMLError QueryUnsignedAttribute(string name, SWIGTYPE_p_unsigned_int value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryUnsignedAttribute(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(value));
    return ret;
  }

  public XMLError QueryInt64Attribute(string name, SWIGTYPE_p_int64_t value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryInt64Attribute(swigCPtr, name, SWIGTYPE_p_int64_t.getCPtr(value));
    return ret;
  }

  public XMLError QueryUnsigned64Attribute(string name, SWIGTYPE_p_uint64_t value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryUnsigned64Attribute(swigCPtr, name, SWIGTYPE_p_uint64_t.getCPtr(value));
    return ret;
  }

  public XMLError QueryBoolAttribute(string name, SWIGTYPE_p_bool value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryBoolAttribute(swigCPtr, name, SWIGTYPE_p_bool.getCPtr(value));
    return ret;
  }

  public XMLError QueryDoubleAttribute(string name, SWIGTYPE_p_double value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryDoubleAttribute(swigCPtr, name, SWIGTYPE_p_double.getCPtr(value));
    return ret;
  }

  public XMLError QueryFloatAttribute(string name, SWIGTYPE_p_float value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryFloatAttribute(swigCPtr, name, SWIGTYPE_p_float.getCPtr(value));
    return ret;
  }

  public XMLError QueryStringAttribute(string name, SWIGTYPE_p_p_char value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryStringAttribute(swigCPtr, name, SWIGTYPE_p_p_char.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_int value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_0(swigCPtr, name, SWIGTYPE_p_int.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_unsigned_int value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_1(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_int64_t value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_2(swigCPtr, name, SWIGTYPE_p_int64_t.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_uint64_t value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_3(swigCPtr, name, SWIGTYPE_p_uint64_t.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_bool value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_4(swigCPtr, name, SWIGTYPE_p_bool.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_double value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_5(swigCPtr, name, SWIGTYPE_p_double.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_float value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_6(swigCPtr, name, SWIGTYPE_p_float.getCPtr(value));
    return ret;
  }

  public XMLError QueryAttribute(string name, SWIGTYPE_p_p_char value) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryAttribute__SWIG_7(swigCPtr, name, SWIGTYPE_p_p_char.getCPtr(value));
    return ret;
  }

  public void SetAttribute(string name, string value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_0(swigCPtr, name, value);
  }

  public void SetAttribute(string name, int value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_1(swigCPtr, name, value);
  }

  public void SetAttribute(string name, uint value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_2(swigCPtr, name, value);
  }

  public void SetAttribute(string name, SWIGTYPE_p_int64_t value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_3(swigCPtr, name, SWIGTYPE_p_int64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetAttribute(string name, SWIGTYPE_p_uint64_t value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_4(swigCPtr, name, SWIGTYPE_p_uint64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetAttribute(string name, bool value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_5(swigCPtr, name, value);
  }

  public void SetAttribute(string name, double value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_6(swigCPtr, name, value);
  }

  public void SetAttribute(string name, float value) {
    cstinyxml2PINVOKE.XMLElement_SetAttribute__SWIG_7(swigCPtr, name, value);
  }

  public void DeleteAttribute(string name) {
    cstinyxml2PINVOKE.XMLElement_DeleteAttribute(swigCPtr, name);
  }

  public XMLAttribute FirstAttribute() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_FirstAttribute(swigCPtr);
    XMLAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLAttribute(cPtr, false);
    return ret;
  }

  public XMLAttribute FindAttribute(string name) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_FindAttribute(swigCPtr, name);
    XMLAttribute ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLAttribute(cPtr, false);
    return ret;
  }

  public string GetText() {
    string ret = cstinyxml2PINVOKE.XMLElement_GetText(swigCPtr);
    return ret;
  }

  public void SetText(string inText) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_0(swigCPtr, inText);
  }

  public void SetText(int value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_1(swigCPtr, value);
  }

  public void SetText(uint value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_2(swigCPtr, value);
  }

  public void SetText(SWIGTYPE_p_int64_t value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_3(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetText(SWIGTYPE_p_uint64_t value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_4(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetText(bool value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_5(swigCPtr, value);
  }

  public void SetText(double value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_6(swigCPtr, value);
  }

  public void SetText(float value) {
    cstinyxml2PINVOKE.XMLElement_SetText__SWIG_7(swigCPtr, value);
  }

  public XMLError QueryIntText(SWIGTYPE_p_int ival) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryIntText(swigCPtr, SWIGTYPE_p_int.getCPtr(ival));
    return ret;
  }

  public XMLError QueryUnsignedText(SWIGTYPE_p_unsigned_int uval) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryUnsignedText(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(uval));
    return ret;
  }

  public XMLError QueryInt64Text(SWIGTYPE_p_int64_t uval) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryInt64Text(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(uval));
    return ret;
  }

  public XMLError QueryUnsigned64Text(SWIGTYPE_p_uint64_t uval) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryUnsigned64Text(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(uval));
    return ret;
  }

  public XMLError QueryBoolText(SWIGTYPE_p_bool bval) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryBoolText(swigCPtr, SWIGTYPE_p_bool.getCPtr(bval));
    return ret;
  }

  public XMLError QueryDoubleText(SWIGTYPE_p_double dval) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryDoubleText(swigCPtr, SWIGTYPE_p_double.getCPtr(dval));
    return ret;
  }

  public XMLError QueryFloatText(SWIGTYPE_p_float fval) {
    XMLError ret = (XMLError)cstinyxml2PINVOKE.XMLElement_QueryFloatText(swigCPtr, SWIGTYPE_p_float.getCPtr(fval));
    return ret;
  }

  public int IntText(int defaultValue) {
    int ret = cstinyxml2PINVOKE.XMLElement_IntText__SWIG_0(swigCPtr, defaultValue);
    return ret;
  }

  public int IntText() {
    int ret = cstinyxml2PINVOKE.XMLElement_IntText__SWIG_1(swigCPtr);
    return ret;
  }

  public uint UnsignedText(uint defaultValue) {
    uint ret = cstinyxml2PINVOKE.XMLElement_UnsignedText__SWIG_0(swigCPtr, defaultValue);
    return ret;
  }

  public uint UnsignedText() {
    uint ret = cstinyxml2PINVOKE.XMLElement_UnsignedText__SWIG_1(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_int64_t Int64Text(SWIGTYPE_p_int64_t defaultValue) {
    SWIGTYPE_p_int64_t ret = new SWIGTYPE_p_int64_t(cstinyxml2PINVOKE.XMLElement_Int64Text__SWIG_0(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(defaultValue)), true);
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_int64_t Int64Text() {
    SWIGTYPE_p_int64_t ret = new SWIGTYPE_p_int64_t(cstinyxml2PINVOKE.XMLElement_Int64Text__SWIG_1(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_uint64_t Unsigned64Text(SWIGTYPE_p_uint64_t defaultValue) {
    SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(cstinyxml2PINVOKE.XMLElement_Unsigned64Text__SWIG_0(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(defaultValue)), true);
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_uint64_t Unsigned64Text() {
    SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(cstinyxml2PINVOKE.XMLElement_Unsigned64Text__SWIG_1(swigCPtr), true);
    return ret;
  }

  public bool BoolText(bool defaultValue) {
    bool ret = cstinyxml2PINVOKE.XMLElement_BoolText__SWIG_0(swigCPtr, defaultValue);
    return ret;
  }

  public bool BoolText() {
    bool ret = cstinyxml2PINVOKE.XMLElement_BoolText__SWIG_1(swigCPtr);
    return ret;
  }

  public double DoubleText(double defaultValue) {
    double ret = cstinyxml2PINVOKE.XMLElement_DoubleText__SWIG_0(swigCPtr, defaultValue);
    return ret;
  }

  public double DoubleText() {
    double ret = cstinyxml2PINVOKE.XMLElement_DoubleText__SWIG_1(swigCPtr);
    return ret;
  }

  public float FloatText(float defaultValue) {
    float ret = cstinyxml2PINVOKE.XMLElement_FloatText__SWIG_0(swigCPtr, defaultValue);
    return ret;
  }

  public float FloatText() {
    float ret = cstinyxml2PINVOKE.XMLElement_FloatText__SWIG_1(swigCPtr);
    return ret;
  }

  public XMLElement InsertNewChildElement(string name) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_InsertNewChildElement(swigCPtr, name);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLComment InsertNewComment(string comment) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_InsertNewComment(swigCPtr, comment);
    XMLComment ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLComment(cPtr, false);
    return ret;
  }

  public XMLText InsertNewText(string text) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_InsertNewText(swigCPtr, text);
    XMLText ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLText(cPtr, false);
    return ret;
  }

  public XMLDeclaration InsertNewDeclaration(string text) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_InsertNewDeclaration(swigCPtr, text);
    XMLDeclaration ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLDeclaration(cPtr, false);
    return ret;
  }

  public XMLUnknown InsertNewUnknown(string text) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_InsertNewUnknown(swigCPtr, text);
    XMLUnknown ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLUnknown(cPtr, false);
    return ret;
  }

  public XMLElement.ElementClosingType ClosingType() {
    XMLElement.ElementClosingType ret = (XMLElement.ElementClosingType)cstinyxml2PINVOKE.XMLElement_ClosingType(swigCPtr);
    return ret;
  }

  public override XMLNode ShallowClone(XMLDocument document) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLElement_ShallowClone(swigCPtr, XMLDocument.getCPtr(document));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public override bool ShallowEqual(XMLNode compare) {
    bool ret = cstinyxml2PINVOKE.XMLElement_ShallowEqual(swigCPtr, XMLNode.getCPtr(compare));
    return ret;
  }

  public enum ElementClosingType {
    OPEN,
    CLOSED,
    CLOSING
  }

}
