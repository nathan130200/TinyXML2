//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class XMLVisitor : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XMLVisitor(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XMLVisitor obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XMLVisitor obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XMLVisitor() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cstinyxml2PINVOKE.delete_XMLVisitor(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual bool VisitEnter(XMLDocument arg0) {
    bool ret = (SwigDerivedClassHasMethod("VisitEnter", swigMethodTypes0) ? cstinyxml2PINVOKE.XMLVisitor_VisitEnterSwigExplicitXMLVisitor__SWIG_0(swigCPtr, XMLDocument.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_VisitEnter__SWIG_0(swigCPtr, XMLDocument.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool VisitExit(XMLDocument arg0) {
    bool ret = (SwigDerivedClassHasMethod("VisitExit", swigMethodTypes1) ? cstinyxml2PINVOKE.XMLVisitor_VisitExitSwigExplicitXMLVisitor__SWIG_0(swigCPtr, XMLDocument.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_VisitExit__SWIG_0(swigCPtr, XMLDocument.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool VisitEnter(XMLElement arg0, XMLAttribute arg1) {
    bool ret = (SwigDerivedClassHasMethod("VisitEnter", swigMethodTypes2) ? cstinyxml2PINVOKE.XMLVisitor_VisitEnterSwigExplicitXMLVisitor__SWIG_1(swigCPtr, XMLElement.getCPtr(arg0), XMLAttribute.getCPtr(arg1)) : cstinyxml2PINVOKE.XMLVisitor_VisitEnter__SWIG_1(swigCPtr, XMLElement.getCPtr(arg0), XMLAttribute.getCPtr(arg1)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool VisitExit(XMLElement arg0) {
    bool ret = (SwigDerivedClassHasMethod("VisitExit", swigMethodTypes3) ? cstinyxml2PINVOKE.XMLVisitor_VisitExitSwigExplicitXMLVisitor__SWIG_1(swigCPtr, XMLElement.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_VisitExit__SWIG_1(swigCPtr, XMLElement.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Visit(XMLDeclaration arg0) {
    bool ret = (SwigDerivedClassHasMethod("Visit", swigMethodTypes4) ? cstinyxml2PINVOKE.XMLVisitor_VisitSwigExplicitXMLVisitor__SWIG_0(swigCPtr, XMLDeclaration.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_Visit__SWIG_0(swigCPtr, XMLDeclaration.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Visit(XMLText arg0) {
    bool ret = (SwigDerivedClassHasMethod("Visit", swigMethodTypes5) ? cstinyxml2PINVOKE.XMLVisitor_VisitSwigExplicitXMLVisitor__SWIG_1(swigCPtr, XMLText.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_Visit__SWIG_1(swigCPtr, XMLText.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Visit(XMLComment arg0) {
    bool ret = (SwigDerivedClassHasMethod("Visit", swigMethodTypes6) ? cstinyxml2PINVOKE.XMLVisitor_VisitSwigExplicitXMLVisitor__SWIG_2(swigCPtr, XMLComment.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_Visit__SWIG_2(swigCPtr, XMLComment.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Visit(XMLUnknown arg0) {
    bool ret = (SwigDerivedClassHasMethod("Visit", swigMethodTypes7) ? cstinyxml2PINVOKE.XMLVisitor_VisitSwigExplicitXMLVisitor__SWIG_3(swigCPtr, XMLUnknown.getCPtr(arg0)) : cstinyxml2PINVOKE.XMLVisitor_Visit__SWIG_3(swigCPtr, XMLUnknown.getCPtr(arg0)));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public XMLVisitor() : this(cstinyxml2PINVOKE.new_XMLVisitor(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("VisitEnter", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateXMLVisitor_0(SwigDirectorMethodVisitEnter__SWIG_0);
    if (SwigDerivedClassHasMethod("VisitExit", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateXMLVisitor_1(SwigDirectorMethodVisitExit__SWIG_0);
    if (SwigDerivedClassHasMethod("VisitEnter", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateXMLVisitor_2(SwigDirectorMethodVisitEnter__SWIG_1);
    if (SwigDerivedClassHasMethod("VisitExit", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateXMLVisitor_3(SwigDirectorMethodVisitExit__SWIG_1);
    if (SwigDerivedClassHasMethod("Visit", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateXMLVisitor_4(SwigDirectorMethodVisit__SWIG_0);
    if (SwigDerivedClassHasMethod("Visit", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateXMLVisitor_5(SwigDirectorMethodVisit__SWIG_1);
    if (SwigDerivedClassHasMethod("Visit", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateXMLVisitor_6(SwigDirectorMethodVisit__SWIG_2);
    if (SwigDerivedClassHasMethod("Visit", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateXMLVisitor_7(SwigDirectorMethodVisit__SWIG_3);
    cstinyxml2PINVOKE.XMLVisitor_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo[] methodInfos = this.GetType().GetMethods(
        global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance);
    foreach (global::System.Reflection.MethodInfo methodInfo in methodInfos) {
      if (methodInfo.DeclaringType == null)
        continue;

      if (methodInfo.Name != methodName)
        continue;

      var parameters = methodInfo.GetParameters();
      if (parameters.Length != methodTypes.Length)
        continue;

      bool parametersMatch = true;
      for (var i = 0; i < parameters.Length; i++) {
        if (parameters[i].ParameterType != methodTypes[i]) {
          parametersMatch = false;
          break;
        }
      }

      if (!parametersMatch)
        continue;

      if (methodInfo.IsVirtual && (methodInfo.DeclaringType.IsSubclassOf(typeof(XMLVisitor))) &&
        methodInfo.DeclaringType != methodInfo.GetBaseDefinition().DeclaringType) {
        return true;
      }
    }

    return false;
  }

  private bool SwigDirectorMethodVisitEnter__SWIG_0(global::System.IntPtr arg0) {
    return VisitEnter(new XMLDocument(arg0, false));
  }

  private bool SwigDirectorMethodVisitExit__SWIG_0(global::System.IntPtr arg0) {
    return VisitExit(new XMLDocument(arg0, false));
  }

  private bool SwigDirectorMethodVisitEnter__SWIG_1(global::System.IntPtr arg0, global::System.IntPtr arg1) {
    return VisitEnter(new XMLElement(arg0, false), (arg1 == global::System.IntPtr.Zero) ? null : new XMLAttribute(arg1, false));
  }

  private bool SwigDirectorMethodVisitExit__SWIG_1(global::System.IntPtr arg0) {
    return VisitExit(new XMLElement(arg0, false));
  }

  private bool SwigDirectorMethodVisit__SWIG_0(global::System.IntPtr arg0) {
    return Visit(new XMLDeclaration(arg0, false));
  }

  private bool SwigDirectorMethodVisit__SWIG_1(global::System.IntPtr arg0) {
    return Visit(new XMLText(arg0, false));
  }

  private bool SwigDirectorMethodVisit__SWIG_2(global::System.IntPtr arg0) {
    return Visit(new XMLComment(arg0, false));
  }

  private bool SwigDirectorMethodVisit__SWIG_3(global::System.IntPtr arg0) {
    return Visit(new XMLUnknown(arg0, false));
  }

  public delegate bool SwigDelegateXMLVisitor_0(global::System.IntPtr arg0);
  public delegate bool SwigDelegateXMLVisitor_1(global::System.IntPtr arg0);
  public delegate bool SwigDelegateXMLVisitor_2(global::System.IntPtr arg0, global::System.IntPtr arg1);
  public delegate bool SwigDelegateXMLVisitor_3(global::System.IntPtr arg0);
  public delegate bool SwigDelegateXMLVisitor_4(global::System.IntPtr arg0);
  public delegate bool SwigDelegateXMLVisitor_5(global::System.IntPtr arg0);
  public delegate bool SwigDelegateXMLVisitor_6(global::System.IntPtr arg0);
  public delegate bool SwigDelegateXMLVisitor_7(global::System.IntPtr arg0);

  private SwigDelegateXMLVisitor_0 swigDelegate0;
  private SwigDelegateXMLVisitor_1 swigDelegate1;
  private SwigDelegateXMLVisitor_2 swigDelegate2;
  private SwigDelegateXMLVisitor_3 swigDelegate3;
  private SwigDelegateXMLVisitor_4 swigDelegate4;
  private SwigDelegateXMLVisitor_5 swigDelegate5;
  private SwigDelegateXMLVisitor_6 swigDelegate6;
  private SwigDelegateXMLVisitor_7 swigDelegate7;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(XMLDocument) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(XMLDocument) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(XMLElement), typeof(XMLAttribute) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(XMLElement) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(XMLDeclaration) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(XMLText) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(XMLComment) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(XMLUnknown) };
}
