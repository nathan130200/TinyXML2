//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class XMLNode : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XMLNode(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XMLNode obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XMLNode obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~XMLNode() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public XMLDocument GetDocument() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_GetDocument__SWIG_0(swigCPtr);
    XMLDocument ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLDocument(cPtr, false);
    return ret;
  }

  public virtual XMLElement ToElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ToElement__SWIG_0(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public virtual XMLText ToText() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ToText__SWIG_0(swigCPtr);
    XMLText ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLText(cPtr, false);
    return ret;
  }

  public virtual XMLComment ToComment() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ToComment__SWIG_0(swigCPtr);
    XMLComment ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLComment(cPtr, false);
    return ret;
  }

  public virtual XMLDocument ToDocument() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ToDocument__SWIG_0(swigCPtr);
    XMLDocument ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLDocument(cPtr, false);
    return ret;
  }

  public virtual XMLDeclaration ToDeclaration() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ToDeclaration__SWIG_0(swigCPtr);
    XMLDeclaration ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLDeclaration(cPtr, false);
    return ret;
  }

  public virtual XMLUnknown ToUnknown() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ToUnknown__SWIG_0(swigCPtr);
    XMLUnknown ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLUnknown(cPtr, false);
    return ret;
  }

  public int ChildElementCount(string value) {
    int ret = cstinyxml2PINVOKE.XMLNode_ChildElementCount__SWIG_0(swigCPtr, value);
    return ret;
  }

  public int ChildElementCount() {
    int ret = cstinyxml2PINVOKE.XMLNode_ChildElementCount__SWIG_1(swigCPtr);
    return ret;
  }

  public string Value() {
    string ret = cstinyxml2PINVOKE.XMLNode_Value(swigCPtr);
    return ret;
  }

  public void SetValue(string val, bool staticMem) {
    cstinyxml2PINVOKE.XMLNode_SetValue__SWIG_0(swigCPtr, val, staticMem);
  }

  public void SetValue(string val) {
    cstinyxml2PINVOKE.XMLNode_SetValue__SWIG_1(swigCPtr, val);
  }

  public int GetLineNum() {
    int ret = cstinyxml2PINVOKE.XMLNode_GetLineNum(swigCPtr);
    return ret;
  }

  public XMLNode Parent() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_Parent__SWIG_0(swigCPtr);
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public bool NoChildren() {
    bool ret = cstinyxml2PINVOKE.XMLNode_NoChildren(swigCPtr);
    return ret;
  }

  public XMLNode FirstChild() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_FirstChild__SWIG_0(swigCPtr);
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLElement FirstChildElement(string name) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_FirstChildElement__SWIG_0(swigCPtr, name);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLElement FirstChildElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_FirstChildElement__SWIG_1(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLNode LastChild() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_LastChild__SWIG_0(swigCPtr);
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLElement LastChildElement(string name) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_LastChildElement__SWIG_0(swigCPtr, name);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLElement LastChildElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_LastChildElement__SWIG_1(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLNode PreviousSibling() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_PreviousSibling__SWIG_0(swigCPtr);
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLElement PreviousSiblingElement(string name) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_PreviousSiblingElement__SWIG_0(swigCPtr, name);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLElement PreviousSiblingElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_PreviousSiblingElement__SWIG_1(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLNode NextSibling() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_NextSibling__SWIG_0(swigCPtr);
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLElement NextSiblingElement(string name) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_NextSiblingElement__SWIG_0(swigCPtr, name);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLElement NextSiblingElement() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_NextSiblingElement__SWIG_1(swigCPtr);
    XMLElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLElement(cPtr, false);
    return ret;
  }

  public XMLNode InsertEndChild(XMLNode addThis) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_InsertEndChild(swigCPtr, XMLNode.getCPtr(addThis));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLNode LinkEndChild(XMLNode addThis) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_LinkEndChild(swigCPtr, XMLNode.getCPtr(addThis));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLNode InsertFirstChild(XMLNode addThis) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_InsertFirstChild(swigCPtr, XMLNode.getCPtr(addThis));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLNode InsertAfterChild(XMLNode afterThis, XMLNode addThis) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_InsertAfterChild(swigCPtr, XMLNode.getCPtr(afterThis), XMLNode.getCPtr(addThis));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public void DeleteChildren() {
    cstinyxml2PINVOKE.XMLNode_DeleteChildren(swigCPtr);
  }

  public void DeleteChild(XMLNode node) {
    cstinyxml2PINVOKE.XMLNode_DeleteChild(swigCPtr, XMLNode.getCPtr(node));
  }

  public virtual XMLNode ShallowClone(XMLDocument document) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_ShallowClone(swigCPtr, XMLDocument.getCPtr(document));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public XMLNode DeepClone(XMLDocument target) {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_DeepClone(swigCPtr, XMLDocument.getCPtr(target));
    XMLNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new XMLNode(cPtr, false);
    return ret;
  }

  public virtual bool ShallowEqual(XMLNode compare) {
    bool ret = cstinyxml2PINVOKE.XMLNode_ShallowEqual(swigCPtr, XMLNode.getCPtr(compare));
    return ret;
  }

  public virtual bool Accept(XMLVisitor visitor) {
    bool ret = cstinyxml2PINVOKE.XMLNode_Accept(swigCPtr, XMLVisitor.getCPtr(visitor));
    return ret;
  }

  public void SetUserData(SWIGTYPE_p_void userData) {
    cstinyxml2PINVOKE.XMLNode_SetUserData(swigCPtr, SWIGTYPE_p_void.getCPtr(userData));
  }

  public SWIGTYPE_p_void GetUserData() {
    global::System.IntPtr cPtr = cstinyxml2PINVOKE.XMLNode_GetUserData(swigCPtr);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

}
