//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class XMLPrinter : XMLVisitor {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal XMLPrinter(global::System.IntPtr cPtr, bool cMemoryOwn) : base(cstinyxml2PINVOKE.XMLPrinter_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XMLPrinter obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(XMLPrinter obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cstinyxml2PINVOKE.delete_XMLPrinter(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public XMLPrinter(SWIGTYPE_p_FILE file, bool compact, int depth) : this(cstinyxml2PINVOKE.new_XMLPrinter__SWIG_0(SWIGTYPE_p_FILE.getCPtr(file), compact, depth), true) {
  }

  public XMLPrinter(SWIGTYPE_p_FILE file, bool compact) : this(cstinyxml2PINVOKE.new_XMLPrinter__SWIG_1(SWIGTYPE_p_FILE.getCPtr(file), compact), true) {
  }

  public XMLPrinter(SWIGTYPE_p_FILE file) : this(cstinyxml2PINVOKE.new_XMLPrinter__SWIG_2(SWIGTYPE_p_FILE.getCPtr(file)), true) {
  }

  public XMLPrinter() : this(cstinyxml2PINVOKE.new_XMLPrinter__SWIG_3(), true) {
  }

  public void PushHeader(bool writeBOM, bool writeDeclaration) {
    cstinyxml2PINVOKE.XMLPrinter_PushHeader(swigCPtr, writeBOM, writeDeclaration);
  }

  public void OpenElement(string name, bool compactMode) {
    cstinyxml2PINVOKE.XMLPrinter_OpenElement__SWIG_0(swigCPtr, name, compactMode);
  }

  public void OpenElement(string name) {
    cstinyxml2PINVOKE.XMLPrinter_OpenElement__SWIG_1(swigCPtr, name);
  }

  public void PushAttribute(string name, string value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_0(swigCPtr, name, value);
  }

  public void PushAttribute(string name, int value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_1(swigCPtr, name, value);
  }

  public void PushAttribute(string name, uint value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_2(swigCPtr, name, value);
  }

  public void PushAttribute(string name, SWIGTYPE_p_int64_t value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_3(swigCPtr, name, SWIGTYPE_p_int64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void PushAttribute(string name, SWIGTYPE_p_uint64_t value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_4(swigCPtr, name, SWIGTYPE_p_uint64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void PushAttribute(string name, bool value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_5(swigCPtr, name, value);
  }

  public void PushAttribute(string name, double value) {
    cstinyxml2PINVOKE.XMLPrinter_PushAttribute__SWIG_6(swigCPtr, name, value);
  }

  public virtual void CloseElement(bool compactMode) {
    cstinyxml2PINVOKE.XMLPrinter_CloseElement__SWIG_0(swigCPtr, compactMode);
  }

  public virtual void CloseElement() {
    cstinyxml2PINVOKE.XMLPrinter_CloseElement__SWIG_1(swigCPtr);
  }

  public void PushText(string text, bool cdata) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_0(swigCPtr, text, cdata);
  }

  public void PushText(string text) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_1(swigCPtr, text);
  }

  public void PushText(int value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_2(swigCPtr, value);
  }

  public void PushText(uint value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_3(swigCPtr, value);
  }

  public void PushText(SWIGTYPE_p_int64_t value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_4(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void PushText(SWIGTYPE_p_uint64_t value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_5(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
  }

  public void PushText(bool value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_6(swigCPtr, value);
  }

  public void PushText(float value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_7(swigCPtr, value);
  }

  public void PushText(double value) {
    cstinyxml2PINVOKE.XMLPrinter_PushText__SWIG_8(swigCPtr, value);
  }

  public void PushComment(string comment) {
    cstinyxml2PINVOKE.XMLPrinter_PushComment(swigCPtr, comment);
  }

  public void PushDeclaration(string value) {
    cstinyxml2PINVOKE.XMLPrinter_PushDeclaration(swigCPtr, value);
  }

  public void PushUnknown(string value) {
    cstinyxml2PINVOKE.XMLPrinter_PushUnknown(swigCPtr, value);
  }

  public override bool VisitEnter(XMLDocument arg0) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_VisitEnter__SWIG_0(swigCPtr, XMLDocument.getCPtr(arg0));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool VisitExit(XMLDocument arg0) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_VisitExit__SWIG_0(swigCPtr, XMLDocument.getCPtr(arg0));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool VisitEnter(XMLElement element, XMLAttribute attribute) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_VisitEnter__SWIG_1(swigCPtr, XMLElement.getCPtr(element), XMLAttribute.getCPtr(attribute));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool VisitExit(XMLElement element) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_VisitExit__SWIG_1(swigCPtr, XMLElement.getCPtr(element));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Visit(XMLText text) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_Visit__SWIG_0(swigCPtr, XMLText.getCPtr(text));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Visit(XMLComment comment) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_Visit__SWIG_1(swigCPtr, XMLComment.getCPtr(comment));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Visit(XMLDeclaration declaration) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_Visit__SWIG_2(swigCPtr, XMLDeclaration.getCPtr(declaration));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Visit(XMLUnknown unknown) {
    bool ret = cstinyxml2PINVOKE.XMLPrinter_Visit__SWIG_3(swigCPtr, XMLUnknown.getCPtr(unknown));
    if (cstinyxml2PINVOKE.SWIGPendingException.Pending) throw cstinyxml2PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string CStr() {
    string ret = cstinyxml2PINVOKE.XMLPrinter_CStr(swigCPtr);
    return ret;
  }

  public int CStrSize() {
    int ret = cstinyxml2PINVOKE.XMLPrinter_CStrSize(swigCPtr);
    return ret;
  }

  public void ClearBuffer(bool resetToFirstElement) {
    cstinyxml2PINVOKE.XMLPrinter_ClearBuffer__SWIG_0(swigCPtr, resetToFirstElement);
  }

  public void ClearBuffer() {
    cstinyxml2PINVOKE.XMLPrinter_ClearBuffer__SWIG_1(swigCPtr);
  }

}
